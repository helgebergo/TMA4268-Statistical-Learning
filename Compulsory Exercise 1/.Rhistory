library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
head(d.worm)
str(d.worm)
x <- rnorm(100)
hist(x)
## a)
#What is the dimension of the dataset (number of rows and columns)? Which of the variables are qualitative, which are quantitative?
## a)
#What is the dimension of the dataset (number of rows and columns)? Which of the variables are qualitative, which are quantitative?
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
head(d.worm)
head(d.worm)
str(d.worm)
id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
head(d.worm)
str(d.worm)
View(d.worm)
View(d.worm)
ggplot(d.worm,aes(x= ... ,y=  ... ,colour= ...)) + geom_point() + theme_bw()
?aes
?gglopt.aes
??ggplot.aes
#ggplot(d.worm,aes(x= ... ,y=  ... ,colour= ...)) + geom_point() + theme_bw()
ggplot(d.worm, aes(x=MAGENUMF,y=GEWICHT,colour=Gattung) + geom_point() +theme_bw
)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggplot2)
library(ggfortify)
library(dplyr)
#ggplot(d.worm,aes(x= ... ,y=  ... ,colour= ...)) + geom_point() + theme_bw()
ggplot(d.worm, aes(x=MAGENUMF,y=GEWICHT,colour=Gattung) + geom_point() +theme_bw
)
#ggplot(d.worm,aes(x= ... ,y=  ... ,colour= ...)) + geom_point() + theme_bw()
ggplot(d.worm, aes(x=MAGENUMF,y=GEWICHT,colour='Gattung') + geom_point() +theme_bw
)
#ggplot(d.worm,aes(x= ... ,y=  ... ,colour= ...)) + geom_point() + theme_bw()
ggplot(d.worm, aes(x='MAGENUMF',y='GEWICHT',colour='Gattung') + geom_point() +theme_bw
)
d.worm.Gattung
d.worm
Gattung
#ggplot(d.worm,aes(x= ... ,y=  ... ,colour= ...)) + geom_point() + theme_bw()
ggplot(d.worm, aes(x='MAGENUMF',y='GEWICHT',colour='Gattung') + geom_point() +theme_bw)
as.factor(d.worm)
ggplot(d.worm, aes(x='MAGENUMF',y='GEWICHT',colour='Gattung') + geom_point() +theme_bw)
ggplot(d.worm, aes(x=MAGENUMF,y=GEWICHT,colour=Gattung) + geom_point() +theme_bw)
ggplot(d.worm, aes(x=MAGENUMF,y=GEWICHT,colour=Gattung) + geom_point(size=2, shape=23) +theme_bw())
ggplot(d.worm, aes(x=MAGENUMF,y=GEWICHT,colour=Gattung) + geom_point(size=2, shape=23) +theme_bw())
ggplot(d.worm, aes(x=MAGENUMF,y=GEWICHT,colour=Gattung) + geom_point(size=2, shape=23))
ggplot(d.worm, aes(x=2,y=GEWICHT,colour=Gattung) + geom_point(size=2, shape=23))
ggplot(d.worm, aes_(x=MAGENUMF,y=GEWICHT,colour=Gattung) + geom_point(size=2, shape=23))
## b)
```{r 2b, eval=TRUE, echo=TRUE}
as.factor(d.worm)
ggplot(d.worm, aes(x=MAGENUMF,y=GEWICHT,colour=Gattung) + geom_point(size=2, shape=23))
d.worm$Gattung <- as.factor(d.worm$Gattung)
ggplot(d.worm, aes(x=MAGENUMF,y=GEWICHT,colour=Gattung) + geom_point(size=2, shape=23))
ggplot(d.worm, mapping= aes(x=MAGENUMF,y=GEWICHT,colour=Gattung) + geom_point(size=2, shape=23))
ggplot(d.worm, mapping= aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point(size=2, shape=23)
ggplot(d.worm, mapping= aes(x=MAGENUMF,y=GEWICHT,colour=Gattung))
ggplot(d.worm, mapping= aes(x=MAGENUMF,y=GEWICHT,colour=Gattung))
ggplot(d.worm, mapping= aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point(size=3, shape=4)
transformedGEWICHT <- d.worm$GEWICHT
?geom_point
?mapping
?aes
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point()
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point() + geom_density2d()
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point() + geom_density()
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point() + geom_density()
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point() + geom_map()
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point()
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point(x=MAGENUMF,y=GEWICHT)
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point()
```{r setup, include=FALSE}
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
head(d.worm)
head(d.worm)
str(d.worm)
d.worm$Gattung <- as.factor(d.worm$Gattung)
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point()
transformedGEWICHT <- d.worm$GEWICHT
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point()
transformedGEWICHT <- log(d.worm$GEWICHT)
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point()
library(ISLR)
names(Smarket)
dim(Smarket)
summary(Smarket)
pairs(Smarket)
cor(Smarket)
cor(Smarket[,-9])
attach(Smarket)
plot(Volume)
attach(d.worm)
attach(Smarket)
plot(Volume)
glm.fits=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family=binomial)
summary(glm.fits)
coef(glm.fits)
summary(glm.fits)$coef
summary(glm.fits)$coef[,4]
glm.probs=predict(glm.fits,type="response")
glm.probs[1:10]
contrasts(Direction)
glm.pred=rep("Down",1250)
glm.pred[glm.probs>.5]="Up"
table(glm.pred,Direction)
(507+145)/1250
mean(glm.pred==Direction)
train=(Year<2005)
Smarket.2005=Smarket[!train,]
dim(Smarket.2005)
Direction.2005=Direction[!train]
glm.fits=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family=binomial,subset=train)
glm.probs=predict(glm.fits,Smarket.2005,type="response")
glm.pred=rep("Down",252)
glm.pred[glm.probs>.5]="Up"
table(glm.pred,Direction.2005)
mean(glm.pred==Direction.2005)
mean(glm.pred!=Direction.2005)
glm.fits=glm(Direction~Lag1+Lag2,data=Smarket,family=binomial,subset=train)
glm.probs=predict(glm.fits,Smarket.2005,type="response")
glm.pred=rep("Down",252)
glm.pred[glm.probs>.5]="Up"
table(glm.pred,Direction.2005)
mean(glm.pred==Direction.2005)
106/(106+76)
predict(glm.fits,newdata=data.frame(Lag1=c(1.2,1.5),Lag2=c(1.1,-0.8)),type="response")
library(MASS)
lda.fit=lda(Direction~Lag1+Lag2,data=Smarket,subset=train)
lda.fit
plot(lda.fit)
lda.pred=predict(lda.fit, Smarket.2005)
names(lda.pred)
lda.class=lda.pred$class
table(lda.class,Direction.2005)
mean(lda.class==Direction.2005)
sum(lda.pred$posterior[,1]>=.5)
sum(lda.pred$posterior[,1]<.5)
lda.pred$posterior[1:20,1]
lda.class[1:20]
sum(lda.pred$posterior[,1]>.9)
qda.fit=qda(Direction~Lag1+Lag2,data=Smarket,subset=train)
qda.fit
qda.class=predict(qda.fit,Smarket.2005)$class
table(qda.class,Direction.2005)
mean(qda.class==Direction.2005)
library(class)
train.X=cbind(Lag1,Lag2)[train,]
test.X=cbind(Lag1,Lag2)[!train,]
train.Direction=Direction[train]
set.seed(1)
knn.pred=knn(train.X,test.X,train.Direction,k=1)
table(knn.pred,Direction.2005)
(83+43)/252
knn.pred=knn(train.X,test.X,train.Direction,k=3)
table(knn.pred,Direction.2005)
mean(knn.pred==Direction.2005)
dim(Caravan)
attach(Caravan)
summary(Purchase)
348/5822
standardized.X=scale(Caravan[,-86])
var(Caravan[,1])
var(Caravan[,2])
var(standardized.X[,1])
var(standardized.X[,2])
test=1:1000
train.X=standardized.X[-test,]
test.X=standardized.X[test,]
train.Y=Purchase[-test]
test.Y=Purchase[test]
set.seed(1)
knn.pred=knn(train.X,test.X,train.Y,k=1)
mean(test.Y!=knn.pred)
mean(test.Y!="No")
table(knn.pred,test.Y)
9/(68+9)
knn.pred=knn(train.X,test.X,train.Y,k=3)
table(knn.pred,test.Y)
5/26
knn.pred=knn(train.X,test.X,train.Y,k=5)
table(knn.pred,test.Y)
4/15
glm.fits=glm(Purchase~.,data=Caravan,family=binomial,subset=-test)
glm.probs=predict(glm.fits,Caravan[test,],type="response")
glm.pred=rep("No",1000)
glm.pred[glm.probs>.5]="Yes"
table(glm.pred,test.Y)
glm.pred=rep("No",1000)
glm.pred[glm.probs>.25]="Yes"
table(glm.pred,test.Y)
library(MASS)
library(ISLR)
fix(Boston)
names(Boston)
lm.fit=lm(medv~lstat)
lm.fit=lm(medv~lstat,data=Boston)
attach(Boston)
lm.fit=lm(medv~lstat)
lm.fit
summary(lm.fit)
names(lm.fit)
coef(lm.fit)
confint(lm.fit)
predict(lm.fit,data.frame(lstat=(c(5,10,15))), interval="confidence")
predict(lm.fit,data.frame(lstat=(c(5,10,15))), interval="prediction")
plot(lstat,medv)
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
plot(lstat,medv,col="red")
plot(lstat,medv,pch=20)
plot(lstat,medv,pch="+")
plot(1:20,1:20,pch=1:20)
par(mfrow=c(2,2))
plot(lm.fit)
plot(predict(lm.fit), residuals(lm.fit))
plot(predict(lm.fit), rstudent(lm.fit))
plot(hatvalues(lm.fit))
which.max(hatvalues(lm.fit))
lm.fit=lm(medv~lstat+age,data=Boston)
summary(lm.fit)
lm.fit=lm(medv~.,data=Boston)
summary(lm.fit)
library(car)
vif(lm.fit)
lm.fit1=lm(medv~.-age,data=Boston)
summary(lm.fit1)
lm.fit1=update(lm.fit, ~.-age)
summary(lm(medv~lstat*age,data=Boston))
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
lm.fit=lm(medv~lstat)
anova(lm.fit,lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
summary(lm(medv~log(rm),data=Boston))
fix(Carseats)
names(Carseats)
lm.fit=lm(Sales~.+Income:Advertising+Price:Age,data=Carseats)
summary(lm.fit)
attach(Carseats)
contrasts(ShelveLoc)
LoadLibraries
LoadLibraries()
LoadLibraries=function(){
library(ISLR)
library(MASS)
print("The libraries have been loaded.")
}
LoadLibraries
LoadLibraries()
lm.fit1=lm(MAGENUMF∼GEWICHT)
lm.fit1=lm(MAGENUMF∼GEWICHT,)
lm.fit1=lm(MAGENUMF∼GEWICHT)
lm.fit1=lm(MAGENUMF~GEWICHT)
lm.fit1=lm(MAGENUMF~GEWICHT)
ggplot(lm.fit)
summary(lm.fit1)
lm.fit2=lm(MAGENUMF~GEWICHT + I(GEWICHT^2))
summary(lm.fit2)
lm.fit1=lm(MAGENUMF~GEWICHT)
lm.fit2=lm(MAGENUMF~GEWICHT + I(GEWICHT^2))
summary(lm.fit1)
summary(lm.fit2)
summary(lm.fit.squared)
lm.fit.squared=lm(MAGENUMF~GEWICHT + I(GEWICHT^2))
summary(lm.fit.squared)
lm.fit.log=lm(MAGENUMF~GEWICHT + log(GEWICHT))
summary(lm.fit.log)
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point() + abline(lm.fit1)
plot.new
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point() + abline(lm.fit1)
lm.fit1=lm(MAGENUMF~GEWICHT)
summary(lm.fit1)
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point() + abline(lm.fit1)
?ggplot
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
head(d.worm)
str(d.worm)
attach(d.worm)
d.worm$Gattung <- as.factor(d.worm$Gattung)
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point() + abline(lm.fit1)
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point()
lm.fit1=lm(MAGENUMF~GEWICHT)
summary(lm.fit1)
lm.fit.squared=lm(MAGENUMF~GEWICHT + I(GEWICHT^2))
summary(lm.fit.squared)
lm.fit.log=lm(MAGENUMF~GEWICHT + log(GEWICHT))
summary(lm.fit.log)
ggplot(d.worm, mapping=aes(x=log(MAGENUMF),y=log(GEWICHT),colour=Gattung)) + geom_point()
lm.fit1=lm(MAGENUMF~GEWICHT)
lm.fitSquared=lm(MAGENUMF~GEWICHT + I(GEWICHT^2))
lm.fitLog=lm(MAGENUMF~GEWICHT + log(GEWICHT))
#summary(lm.fit.log)
lm.fitLog=lm(log(MAGENUMF)~log(GEWICHT) + log(GEWICHT))
summary(lm.fit.log)
lm.fitLog=lm(log(MAGENUMF)~log(GEWICHT))
summary(lm.fit.log)
lm.fitLog2=lm(log(MAGENUMF)~log(GEWICHT) + log(GEWICHT))
summary(lm.fit.log2)
summary(lm.fitLog)
lm.fitLog2=lm(log(MAGENUMF)~log(GEWICHT) + log(GEWICHT))
summary(lm.fitLog2)
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
head(d.worm)
str(d.worm)
attach(d.worm)
lm.fit1=lm(MAGENUMF~GEWICHT)
lm.fitSquared=lm(MAGENUMF~GEWICHT + I(GEWICHT^2))
lm.fitLog=lm(log(MAGENUMF)~log(GEWICHT))
summary(lm.fitLog)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
head(d.worm)
str(d.worm)
str(d.worm)
attach(d.worm)
d.worm$Gattung <- as.factor(d.worm$Gattung)
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point()
ggplot(d.worm, mapping=aes(x=log(MAGENUMF),y=log(GEWICHT),colour=Gattung)) + geom_point()
lm.fit1=lm(MAGENUMF~GEWICHT)
lm.fitSquared=lm(MAGENUMF~GEWICHT + I(GEWICHT^2))
lm.fitLog=lm(log(MAGENUMF)~log(GEWICHT))
summary(lm.fitLog)
lm.fitLog2=lm(log(MAGENUMF)~log(GEWICHT) + log(GEWICHT))
summary(lm.fitLog2)
lm.fitLog2=lm(log(MAGENUMF)~GEWICHT + log(GEWICHT))
summary(lm.fitLog2)
summary(lm.fitLog)
summary(lm.fitLog2)
summary(lm.fitLog)
summary(lm.fit1)
summary(lm.fitLog)
anova(lm.fit1,lm.fitLog)
attach(d.worm)
lm.fit1=lm(MAGENUMF~GEWICHT)
summary(lm.fit1)
lm.fitSquared=lm(MAGENUMF~GEWICHT + I(GEWICHT^2))
attach(d.worm)
lm.fit1=lm(MAGENUMF~GEWICHT)
summary(lm.fit1)
lm.fitSquared=lm(MAGENUMF~GEWICHT + I(GEWICHT^2))
lm.fitLog2=lm(log(MAGENUMF)~log(GEWICHT))
summary(lm.fitLog2)
lm.fitLog=lm(log(MAGENUMF)~log(GEWICHT))
summary(lm.fitLog)
anova(lm.fit1,lm.fitLog)
anova(lm.fit1,lm.fitLog)
lm.fit1=lm(MAGENUMF~GEWICHT)
summary(lm.fit1)
lm.fitSquared=lm(MAGENUMF~GEWICHT + I(GEWICHT^2))
lm.fitLog=lm(log(MAGENUMF)~log(GEWICHT))
summary(lm.fitLog)
anova(lm.fit1,lm.fitLog)
anova(lm.fit1,lm.fitLog,lm.fitSquared)
anova(lm.fit1,lm.fitLog)
plot(lm.fitLog)
par(mfrow=c(2,2))
plot(lm.fitLog)
contrasts(Gattung)
summary(lm.fitLog)
attach(d.worm)
lm.fit1=lm(MAGENUMF~GEWICHT)
summary(lm.fit1)
lm.fitLog=lm(log(MAGENUMF)~log(GEWICHT))
summary(lm.fitLog)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
# install.packages("knitr") #probably already installed
# install.packages("rmarkdown") #probably already installed
# install.packages("ggplot2") #plotting with ggplot
# install.packages("ggfortify")
# install.packages("MASS")
# install.packages("dplyr")
library(knitr)
library(rmarkdown)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
id <- "1nLen1ckdnX4P9n8ShZeU7zbXpLc7qiwt" # google file ID
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
d.worm <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))
head(d.worm)
str(d.worm)
str(d.worm)
attach(d.worm)
d.worm$Gattung <- as.factor(d.worm$Gattung)
ggplot(d.worm, mapping=aes(x=MAGENUMF,y=GEWICHT,colour=Gattung)) + geom_point()
ggplot(d.worm, mapping=aes(x=log(MAGENUMF),y=log(GEWICHT),colour=Gattung)) + geom_point()
attach(d.worm)
lm.fit1=lm(MAGENUMF~GEWICHT)
summary(lm.fit1)
lm.fitLog=lm(log(MAGENUMF)~log(GEWICHT))
summary(lm.fitLog)
anova(lm.fit1,lm.fitLog)
lm.fitLog=lm(log(MAGENUMF)~log(GEWICHT))
summary(lm.fitLog)
attach(d.worm)
lm.fit1=lm(MAGENUMF~GEWICHT)
summary(lm.fit1)
summary(lm.fit1)
summary(lm.fitLog)
anova(lm.fit1,lm.fitLog)
contrasts(Gattung)
lm.fit3 = lm(log(MAGENUMF)~log(GEWICHT)*Gattung)
summary(lm.fit3)
summary(lm.fit3)
contrasts(Gattung)
d.worm$Gattung <- as.factor(d.worm$Gattung)
contrasts(Gattung)
lm.fit3 = lm(log(MAGENUMF)~log(GEWICHT)*Gattung)
summary(lm.fit3)
contrasts(Gattung)
lm.fit3 = lm(log(MAGENUMF)~log(GEWICHT)*Gattung[1])
lm.fit3 = lm(log(MAGENUMF)~log(GEWICHT)*Gattung(1))
lm.fit3 = lm(log(MAGENUMF)~log(GEWICHT)*Gattung)
summary(lm.fit3)
anova(lm.fit3)
curve(df(x,2,137))
curve(df(x,2,137),0,10)
